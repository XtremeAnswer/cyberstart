#
# Connect to the  server at 'localhost', 10000 send any data,
# the server will respond with the required word codes
# You will find a passage of text in the file backdoor.txt write a script
# which will use that text to build a message using the received word codes.
# Each word code is sent on a new line and contains
# paragraph_number, line_number, word_number
# Send the expected words back to the server to retrieve the flag.
# The server expects all the words in a single transmission.
# The words should have punctuation stripped from them.
# And the words should be separated by newline characters (\n)
#
import socket

client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(('localhost', 10000))
client.send('hey this should work right?')
data = client.recv(2048)
#print(data)
# data is corresponding paragraph, line, and word number
key_file = open('backdoor.txt', 'r').read()
#print(key_file)
print(type(key_file))
paragraphs = key_file.split('\n\n')
#print(paragraphs)
print('')
lines = []
split_keys = []
for thing in paragraphs:
    #print(thing)
    None

for thing in paragraphs:
    thing = thing.splitlines()
    lines.append(thing)
    #print(thing)
        
#print(lines)
character_list = 'abcdefghijklmnopqrstuvwxyz'
words = []
for paragraph in lines:
    split_keys.append(paragraph)
#print(split_keys)
# split_keys holds paragraphs, which in turn hold lines, which hold characters
split_key_dict = {}
lineList_of_dict = []
wordList_of_dict = []
for i, paragraph in enumerate(split_keys):
    for i2, line in enumerate(paragraph):
        line_dict = {}
        
        line = ''.join(line)
        print('')
        print(line)
        print('')
        for i3, word in enumerate(line.split()):
            word_dict = {}
            
            #print(word) 
            # this loops turns the characters into words without punctuation
            tmp = list(word.lower())
            for character in tmp:
                if character not in character_list:
                    tmp.remove(character)
            print(''.join(tmp))
            
            
                    
        
    
print(split_key_dict)
    
    
"""
line = ''.join(line)
        #print(line)
        #print('')
        for word in line.split():
            tmp = list(word)
            for character in tmp:
                if character.lower() not in character_list:
                    tmp.remove(character)
            
            words.append(''.join(tmp))
"""
# code for changing characters into words ^ (or something like that)
        
#print(words)

    

# 'words' holds all the words stripped of punctuation
# and all in lowercase
# split keys holds paragraphs, lines and characters
# the characters need to be replaced with words instead
# a dictionary could be used to give each pararaph/line/word a number
# making it easier to match the specific request

# the 'data' variable holds the required numbers 
# for paragraph, line in paragrap, and word in line
