#
# Connect over TCP to the following server 'localhost', 10000
# Initiate communication with GET to retrieve the encrypted messages.
# Then return the messages decrypted to the server,
# taking care to ensure each message is split on to a newline
#

import socket
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(('localhost', 10000))
client.send('GET')
letters = []
x = client.recv(2048)
#print(x)
secondvar = []
newvarthing = 0
x = x.splitlines()
#print(x)
y = 0
secondvar = []
for thing in x:
    y += 1
    if y > 1:
        secondvar.append(thing)
#print(secondvar)
#print(ord('A'))
#print(ord('Z'))

for i in range(26):
    letters.append(str(chr(65 + i)))

#for thing in letters:
#    print('%s : %s' % (thing, str(ord(thing))))
letters2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
thirdvar = []
fourthvar = []
fifthvar = []
k = 0
for thing in secondvar:
    k += 1
    for key in range(len(letters2)):
        translated = ''
        for symbol in thing:
            if symbol in letters2:
                num = letters2.find(symbol)
                num = num - key
                if num < 0:
                    num = num + len(letters2)
                translated = translated + letters2[num]
            else:
                translated = translated + symbol
        #print('KEY: %s' % (translated))
        if k == 1:
            thirdvar.append(translated)
        elif k == 2:
            fourthvar.append(translated)
        elif k == 3:
            fifthvar.append(translated)
"""
print(thirdvar)
print('')
print(fourthvar)
print('')
print(fifthvar)
"""
freqnums = [8.12, 1.49, 2.71, 4.32, 12.02, 2.30, 2.03, 5.92, 7.31, 0.10, 0.69, 3.98, 2.61, 6.95, 7.68, 1.82, 0.11, 6.02, 6.28, 9.10, 2.88, 1.11, 2.09, 0.17, 2.11, 0.07]  
k = 0
freq_counts = {}
for thing in letters:
    freq_counts[thing] = freqnums[k]
    k += 1

    

def find_counts(combolist):
    instances = 0
    tot_chr = 0
    for sentence in combolist:
        for character in sentence:
            tot_chr += 1
            
            
        


            
        
